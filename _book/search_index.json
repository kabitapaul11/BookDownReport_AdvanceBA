[
["manual-feature-engineering.html", "Chapter 9 Manual Feature Engineering:", " Chapter 9 Manual Feature Engineering: For improving accuracy of the model, we need to include information from other data frames as much as possible. We will include features from Bureau and Bureau Balance data. Manual feature engineering is a tedious process and often rely on domain specific knowledge. Since we have limited knowledge in credit underwriting, we will try to collect as much data as possible as later do feature selection to filter out important variables. The information we plan to include from other tables are. Counts of clientsâ€™ previous loan as per bureau record. Mean, max, minimum, sum for days_credit , days_overdue etc. library(dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union bureau &lt;- read.csv(&quot;Data/bureau.csv&quot;) head(bureau) ## SK_ID_CURR SK_ID_BUREAU CREDIT_ACTIVE CREDIT_CURRENCY DAYS_CREDIT ## 1 215354 5714462 Closed currency 1 -497 ## 2 215354 5714463 Active currency 1 -208 ## 3 215354 5714464 Active currency 1 -203 ## 4 215354 5714465 Active currency 1 -203 ## 5 215354 5714466 Active currency 1 -629 ## 6 215354 5714467 Active currency 1 -273 ## CREDIT_DAY_OVERDUE DAYS_CREDIT_ENDDATE DAYS_ENDDATE_FACT ## 1 0 -153 -153 ## 2 0 1075 NA ## 3 0 528 NA ## 4 0 NA NA ## 5 0 1197 NA ## 6 0 27460 NA ## AMT_CREDIT_MAX_OVERDUE CNT_CREDIT_PROLONG AMT_CREDIT_SUM ## 1 NA 0 91323.0 ## 2 NA 0 225000.0 ## 3 NA 0 464323.5 ## 4 NA 0 90000.0 ## 5 77674.5 0 2700000.0 ## 6 0.0 0 180000.0 ## AMT_CREDIT_SUM_DEBT AMT_CREDIT_SUM_LIMIT AMT_CREDIT_SUM_OVERDUE ## 1 0.00 NA 0 ## 2 171342.00 NA 0 ## 3 NA NA 0 ## 4 NA NA 0 ## 5 NA NA 0 ## 6 71017.38 108982.6 0 ## CREDIT_TYPE DAYS_CREDIT_UPDATE AMT_ANNUITY ## 1 Consumer credit -131 NA ## 2 Credit card -20 NA ## 3 Consumer credit -16 NA ## 4 Credit card -16 NA ## 5 Consumer credit -21 NA ## 6 Credit card -31 NA bureau_balance &lt;- read.csv(&quot;Data/bureau_balance.csv&quot;) #head(bureau_balance) library(reshape2) # aggregating Bureau Balance table bureau_balance_aggr &lt;- bureau_balance %&gt;% group_by(SK_ID_BUREAU) %&gt;% summarize(MONTHS_BALANCE = min(MONTHS_BALANCE)) bureau_status_grp &lt;- bureau_balance %&gt;% group_by(SK_ID_BUREAU, STATUS) %&gt;% summarise(count = n()) bureau_status_grp &lt;- dcast(bureau_status_grp, SK_ID_BUREAU~STATUS, fill=0) ## Using count as value column: use value.var to override. bureau_status_grp &lt;- bureau_status_grp %&gt;% mutate(Status_X = X, Status_C= C, Status_0 = `0`) %&gt;% select(SK_ID_BUREAU, Status_X, Status_C, Status_0) bureau_balance_aggr &lt;- bureau_balance_aggr %&gt;% left_join(bureau_status_grp, by= &quot;SK_ID_BUREAU&quot;) bureau_balance_aggr ## # A tibble: 817,395 x 5 ## SK_ID_BUREAU MONTHS_BALANCE Status_X Status_C Status_0 ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 5001709 -96 11 86 0 ## 2 5001710 -82 30 48 5 ## 3 5001711 -3 1 0 3 ## 4 5001712 -18 0 9 10 ## 5 5001713 -21 22 0 0 ## 6 5001714 -14 15 0 0 ## 7 5001715 -59 60 0 0 ## 8 5001716 -85 20 39 27 ## 9 5001717 -21 0 5 17 ## 10 5001718 -38 10 3 24 ## # ... with 817,385 more rows "]
]
